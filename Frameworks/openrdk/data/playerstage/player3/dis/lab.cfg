driver
(		
	name "stage"
	provides ["simulation::6000:simulation:0"]
	plugin "stageplugin"
	worldfile "lab.world"
)

driver
(
	name "mapfile"
	provides [ "6099:map:0" ]
	filename "a-01-basement.real.png"
	resolution 0.02
	negate 0
	origin [ -30.5 -24.2049 ]
)

# robot1
driver
(
	name "stage"
	provides [ "6101:position2d:0" "6101:blobfinder:0" "6101:laser:0" ]
	model "robot1"
)
driver
(
	name "vfh"
	provides [ "6101:position2d:1" ]
	requires [ "6101:position2d:0" "6101:laser:0" ]
	distance_epsilon 0.4
	angle_epsilon 15
)
#driver
#(
#  name "amcl"
#  provides [ "6101:localize:0" "6101:position2d:2" ]
#  requires [ "odometry::6101:position2d:0" "6101:laser:0" "laser::6099:map:0" ]
#)
driver
(
	name "wavefront"
	provides [ "6101:planner:0" ]
	requires [ "output::6101:position2d:1" "input::6101:position2d:0" "6099:map:0" ]
	safety_dist 0.15
	distance_epsilon 0.6
	angle_epsilon 30
	alwayson 0
)

# robot2
driver
(
	name "stage"
	provides [ "6102:position2d:0" "6102:blobfinder:0" "6102:laser:0" ]
	model "robot2"
)
driver
(
	name "vfh"
	provides [ "6102:position2d:1" ]
	requires [ "6102:position2d:0" "6102:laser:0" ]
	distance_epsilon 0.4
	angle_epsilon 15
)
#driver
#(
#  name "amcl"
#  provides [ "6102:localize:0" "6102:position2d:2" ]
#  requires [ "odometry::6102:position2d:0" "6102:laser:0" "laser::6099:map:0" ]
#)
driver
(
	name "wavefront"
	provides [ "6102:planner:0" ]
	requires [ "output::6102:position2d:1" "input::6102:position2d:0" "6099:map:0" ]
	safety_dist 0.15
	distance_epsilon 0.6
	angle_epsilon 30
	alwayson 0
)

# fixed camera cam01
driver
(
	name "stage"
	provides [ "6301:blobfinder:0"]
	model "cam01"
)
# fixed camera cam02
driver
(
	name "stage"
	provides [ "6302:blobfinder:0"]
	model "cam02"
)
# fixed camera cam03
driver
(
	name "stage"
	provides [ "6303:blobfinder:0"]
	model "cam03"
)

## targetA
#driver
#(
#  name "stage"
#  provides [ "6200:position2d:0" "6200:blobfinder:0" "6200:laser:0" ]
#  model "targetA"
#)
#driver
#(
#  name "vfh"
#  provides [ "6200:position2d:1" ]
#  requires [ "6200:position2d:0" "6200:laser:0" ]
#  distance_epsilon 0.4
#  angle_epsilon 15
#)
#driver
#(
#  name "wavefront"
#  provides [ "6200:planner:0" ]
#  requires [ "output::6200:position2d:1" "input::6200:position2d:0" "6100:map:0" ]
#  safety_dist 0.15
#  distance_epsilon 0.6
#  angle_epsilon 30
#  alwayson 0
#)

## targetB
## targetC
## targetD
## targetE
## targetF

